Grammar

    0 $accept: programa $end

    1 programa: unidadTraduccion

    2 unidadTraduccion: declaracionExterna
    3                 | unidadTraduccion declaracionExterna

    4 sentencia: sentCompuesta
    5          | sentExpresion
    6          | sentSeleccion
    7          | sentIteracion
    8          | sentEtiquetadas
    9          | sentSalto

   10 $@1: ε

   11 sentCompuesta: '{' $@1 listaDeclaraciones listaSentenciasOp '}'

   12 listaDeclaraciones: declaracion listaDeclaraciones
   13                   | error

   14 listaDeclaracionOp: listaDeclaraciones
   15                   | ε

   16 listaSentencias: sentencia listaSentenciasOp
   17                | error

   18 listaSentenciasOp: listaSentencias
   19                  | VACIO

   20 sentExpresion: ';'
   21              | expresion opcionExpresion

   22 opcionExpresion: ';'
   23                | error

   24 sentSeleccion: IF '(' expresion ')' sentencia
   25              | IF '(' expresion ')' sentencia ELSE sentencia

   26 $@2: ε

   27 sentSeleccion: SWITCH '(' expresion ')' $@2 sentencia

   28 sentIteracion: WHILE '(' expresion ')' sentencia
   29              | DO sentencia WHILE '(' expresion ')' ';'
   30              | FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia

   31 expresionOp: expresion
   32            | ε

   33 sentEtiquetadas: IDENTIFICADOR ':' sentencia
   34                | CASE expresion ':' listaSentencias
   35                | DEFAULT ':' listaSentencias

   36 sentSalto: RETURN sentExpresion
   37          | CONTINUE ';'
   38          | BREAK ';'
   39          | GOTO IDENTIFICADOR ';'

   40 expresion: expAsignacion
   41          | expAsignacion ',' expresion

   42 expAsignacion: expCondicional
   43              | expUnaria operAsignacion expAsignacion
   44              | expUnaria operAsignacion error

   45 operAsignacion: '='
   46               | ADD_ASSIGN
   47               | SUB_ASSIGN
   48               | MUL_ASSIGN
   49               | DIV_ASSIGN
   50               | MOD_ASSIGN

   51 expCondicional: expOr
   52               | expOr '?' expresion ':' expCondicional

   53 expOr: expAnd
   54      | expOr OR expAnd

   55 expAnd: expIgualdad
   56       | expAnd AND expIgualdad

   57 expIgualdad: expRelacional
   58            | expIgualdad opcionIgualdad

   59 opcionIgualdad: EQ expRelacional
   60               | NEQ expRelacional

   61 expRelacional: expAditiva
   62              | expRelacional opcionRelacional

   63 opcionRelacional: '<' expAditiva
   64                 | '>' expAditiva
   65                 | LE expAditiva
   66                 | GE expAditiva

   67 expAditiva: expMultiplicativa
   68           | expAditiva opcionAditiva

   69 opcionAditiva: '+' expMultiplicativa
   70              | '-' expMultiplicativa

   71 expMultiplicativa: expUnaria
   72                  | expMultiplicativa '*' expUnaria
   73                  | expMultiplicativa '/' expUnaria
   74                  | expMultiplicativa '%' expUnaria

   75 expUnaria: expPostfijo
   76          | opcionIncDec expPostfijo
   77          | expPostfijo opcionIncDec
   78          | operUnario expUnaria
   79          | SIZEOF '(' nombreTipo ')'

   80 opcionIncDec: INC_OP
   81             | DEC_OP

   82 operUnario: '&'
   83           | '*'
   84           | '-'
   85           | '!'

   86 expPostfijo: expPrimaria
   87            | expPostfijo expPrimaria
   88            | IDENTIFICADOR opcionPostfijo
   89            | IDENTIFICADOR '(' ')'

   90 opcionPostfijo: '[' expresion ']'

   91 $@3: ε

   92 opcionPostfijo: '(' $@3 listaArgumentosNoVacia ')'
   93               | PTR_OP IDENTIFICADOR

   94 listaArgumentosNoVacia: expAsignacion masListaArgumentos

   95 masListaArgumentos: masListaArgumentos ',' expAsignacion
   96                   | ε

   97 expPrimaria: IDENTIFICADOR
   98            | ENTERO
   99            | NUM
  100            | CONSTANTE
  101            | LITERAL_CADENA
  102            | '(' expresion ')'

  103 tipoDato: INT_TYPE
  104         | FLOAT
  105         | DOUBLE
  106         | CHAR
  107         | VOID
  108         | SHORT
  109         | LONG
  110         | UNSIGNED
  111         | SIGNED

  112 nombreTipo: tipoDato

  113 declaracionExterna: definicionFuncion
  114                   | declaracion

  115 definicionFuncion: especificadorDeclaracion decla listaDeclaracionOp sentCompuesta

  116 declaracion: especificadorDeclaracion listaDeclaradores ';'
  117            | especificadorDeclaracion decla ';'

  118 especificadorDeclaracion: especificadorCompleto

  119 especificadorDeclaracionOp: especificadorCompleto
  120                           | ε

  121 especificadorCompleto: tipoAlmacenamiento especificadorDeclaracionOp
  122                      | especificadorTipo especificadorDeclaracionOp
  123                      | calificadorTipo especificadorDeclaracionOp

  124 tipoAlmacenamiento: CONST
  125                   | VOLATILE

  126 calificadorTipo: TYPEDEF
  127                | STATIC
  128                | EXTERN
  129                | AUTO
  130                | REGISTER

  131 listaDeclaradores: declarador
  132                  | listaDeclaradores ',' declarador

  133 declarador: decla opcionPostDeclarador

  134 opcionPostDeclarador: ε
  135                     | '=' inicializador

  136 opcionComa: ','
  137           | ε

  138 listaInicializadores: inicializador
  139                     | listaInicializadores ',' inicializador

  140 inicializador: expAsignacion
  141              | '{' listaInicializadores opcionComa '}'

  142 especificadorTipo: tipoDato
  143                  | especificadorStructUnion
  144                  | especificadorEnum

  145 especificadorStructUnion: structUnion cuerpoEspecificador

  146 structUnion: STRUCT
  147            | UNION

  148 cuerpoEspecificador: '{' listaDeclaracionesStruct '}'
  149                    | IDENTIFICADOR cuerpoStructOp

  150 cuerpoStructOp: '{' listaDeclaracionesStruct '}'
  151               | ε

  152 listaDeclaracionesStruct: declaracionStruct
  153                         | listaDeclaracionesStruct declaracionStruct

  154 declaracionStruct: listaCalificadores declaradoresStruct ';'

  155 listaCalificadores: especificadorTipo listaCalificadoresOp
  156                   | calificadorTipo listaCalificadoresOp

  157 listaCalificadoresOp: listaCalificadores
  158                     | ε

  159 declaradoresStruct: declaStruct
  160                   | declaradoresStruct ',' declaStruct

  161 declaStruct: declaSi
  162            | ':' expresion

  163 declaSi: decla expConstanteOp

  164 expConstanteOp: ':' expresion
  165               | ε

  166 decla: punteroOp declaradorDirecto

  167 punteroOp: puntero
  168          | ε

  169 puntero: '*' listaCalificadoresTipoOp punteroOp

  170 listaCalificadoresTipoOp: listaCalificadoresTipo
  171                         | ε

  172 listaCalificadoresTipo: calificadorTipo
  173                       | listaCalificadoresTipo calificadorTipo

  174 declaradorDirecto: IDENTIFICADOR
  175                  | '(' decla ')'
  176                  | declaradorDirecto continuacionDeclaradorDirecto

  177 continuacionDeclaradorDirecto: '[' expConstanteOp ']'
  178                              | '(' opcional

  179 opcional: ')'
  180         | listaTiposParametros ')'
  181         | listaIdentificadores ')'
  182         | tipoDato ')'

  183 listaTiposParametros: listaParametros opcionalListaParametros

  184 opcionalListaParametros: ',' ELIPSIS
  185                        | ε

  186 listaParametros: declaracionParametro
  187                | listaParametros ',' declaracionParametro

  188 declaracionParametro: especificadorDeclaracion opcionesDecla

  189 opcionesDecla: ε
  190              | decla

  191 listaIdentificadores: IDENTIFICADOR
  192                     | listaIdentificadores ',' IDENTIFICADOR

  193 especificadorEnum: ENUM opcionalEspecificadorEnum

  194 opcionalEspecificadorEnum: IDENTIFICADOR opcionalListaEnumeradores
  195                          | '{' listaEnumeradores '}'

  196 opcionalListaEnumeradores: '{' listaEnumeradores '}'
  197                          | ε

  198 listaEnumeradores: enumerador
  199                  | listaEnumeradores ',' enumerador

  200 enumerador: IDENTIFICADOR opcionalEnumerador

  201 opcionalEnumerador: '=' expresion
  202                   | ε


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 85
    '%' (37) 74
    '&' (38) 82
    '(' (40) 24 25 27 28 29 30 79 89 92 102 175 178
    ')' (41) 24 25 27 28 29 30 79 89 92 102 175 179 180 181 182
    '*' (42) 72 83 169
    '+' (43) 69
    ',' (44) 41 95 132 136 139 160 184 187 192 199
    '-' (45) 70 84
    '/' (47) 73
    ':' (58) 33 34 35 52 162 164
    ';' (59) 20 22 29 30 37 38 39 116 117 154
    '<' (60) 63
    '=' (61) 45 135 201
    '>' (62) 64
    '?' (63) 52
    '[' (91) 90 177
    ']' (93) 90 177
    '{' (123) 11 141 148 150 195 196
    '}' (125) 11 141 148 150 195 196
    error (256) 13 17 23 44
    IDENTIFICADOR <string_type> (258) 33 39 88 89 93 97 149 174 191 192 194 200
    LITERAL_CADENA <string_type> (259) 101
    CONSTANTE (260) 100
    ENUM <string_type> (261) 193
    STRUCT <string_type> (262) 146
    UNION <string_type> (263) 147
    RETURN <string_type> (264) 36
    IF <string_type> (265) 24 25
    ELSE <string_type> (266) 25
    WHILE <string_type> (267) 28 29
    DO <string_type> (268) 29
    FOR <string_type> (269) 30
    DEFAULT <string_type> (270) 35
    CASE <string_type> (271) 34
    CONTINUE <string_type> (272) 37
    BREAK <string_type> (273) 38
    GOTO <string_type> (274) 39
    SWITCH <string_type> (275) 27
    SIZEOF <string_type> (276) 79
    ENTERO <int_type> (277) 98
    NUM <double_type> (278) 99
    ADD_ASSIGN (279) 46
    SUB_ASSIGN (280) 47
    MUL_ASSIGN (281) 48
    DIV_ASSIGN (282) 49
    MOD_ASSIGN (283) 50
    EQ (284) 59
    NEQ (285) 60
    LE (286) 65
    GE (287) 66
    AND (288) 56
    OR (289) 54
    PTR_OP (290) 93
    INC_OP (291) 80
    DEC_OP (292) 81
    ELIPSIS (293) 184
    INT_TYPE (294) 103
    FLOAT (295) 104
    DOUBLE (296) 105
    CHAR (297) 106
    VOID (298) 107
    SHORT (299) 108
    LONG (300) 109
    UNSIGNED (301) 110
    SIGNED (302) 111
    CONST (303) 124
    VOLATILE (304) 125
    TYPEDEF (305) 126
    STATIC (306) 127
    EXTERN (307) 128
    AUTO (308) 129
    REGISTER (309) 130
    THEN (310)
    VACIO (311) 19
    AUXSENTENCIA (312)
    IDENT_PREC (313)


Nonterminals, with rules where they appear

    $accept (79)
        on left: 0
    programa (80)
        on left: 1
        on right: 0
    unidadTraduccion (81)
        on left: 2 3
        on right: 1 3
    sentencia (82)
        on left: 4 5 6 7 8 9
        on right: 16 24 25 27 28 29 30 33
    sentCompuesta (83)
        on left: 11
        on right: 4 115
    $@1 (84)
        on left: 10
        on right: 11
    listaDeclaraciones (85)
        on left: 12 13
        on right: 11 12 14
    listaDeclaracionOp (86)
        on left: 14 15
        on right: 115
    listaSentencias (87)
        on left: 16 17
        on right: 18 34 35
    listaSentenciasOp (88)
        on left: 18 19
        on right: 11 16
    sentExpresion (89)
        on left: 20 21
        on right: 5 36
    opcionExpresion (90)
        on left: 22 23
        on right: 21
    sentSeleccion (91)
        on left: 24 25 27
        on right: 6
    $@2 (92)
        on left: 26
        on right: 27
    sentIteracion (93)
        on left: 28 29 30
        on right: 7
    expresionOp (94)
        on left: 31 32
        on right: 30
    sentEtiquetadas (95)
        on left: 33 34 35
        on right: 8
    sentSalto (96)
        on left: 36 37 38 39
        on right: 9
    expresion (97)
        on left: 40 41
        on right: 21 24 25 27 28 29 31 34 41 52 90 102 162 164 201
    expAsignacion (98)
        on left: 42 43 44
        on right: 40 41 43 94 95 140
    operAsignacion (99)
        on left: 45 46 47 48 49 50
        on right: 43 44
    expCondicional (100)
        on left: 51 52
        on right: 42 52
    expOr (101)
        on left: 53 54
        on right: 51 52 54
    expAnd (102)
        on left: 55 56
        on right: 53 54 56
    expIgualdad (103)
        on left: 57 58
        on right: 55 56 58
    opcionIgualdad (104)
        on left: 59 60
        on right: 58
    expRelacional (105)
        on left: 61 62
        on right: 57 59 60 62
    opcionRelacional (106)
        on left: 63 64 65 66
        on right: 62
    expAditiva (107)
        on left: 67 68
        on right: 61 63 64 65 66 68
    opcionAditiva (108)
        on left: 69 70
        on right: 68
    expMultiplicativa (109)
        on left: 71 72 73 74
        on right: 67 69 70 72 73 74
    expUnaria (110)
        on left: 75 76 77 78 79
        on right: 43 44 71 72 73 74 78
    opcionIncDec (111)
        on left: 80 81
        on right: 76 77
    operUnario (112)
        on left: 82 83 84 85
        on right: 78
    expPostfijo (113)
        on left: 86 87 88 89
        on right: 75 76 77 87
    opcionPostfijo (114)
        on left: 90 92 93
        on right: 88
    $@3 (115)
        on left: 91
        on right: 92
    listaArgumentosNoVacia (116)
        on left: 94
        on right: 92
    masListaArgumentos (117)
        on left: 95 96
        on right: 94 95
    expPrimaria (118)
        on left: 97 98 99 100 101 102
        on right: 86 87
    tipoDato (119)
        on left: 103 104 105 106 107 108 109 110 111
        on right: 112 142 182
    nombreTipo (120)
        on left: 112
        on right: 79
    declaracionExterna (121)
        on left: 113 114
        on right: 2 3
    definicionFuncion (122)
        on left: 115
        on right: 113
    declaracion (123)
        on left: 116 117
        on right: 12 114
    especificadorDeclaracion (124)
        on left: 118
        on right: 115 116 117 188
    especificadorDeclaracionOp (125)
        on left: 119 120
        on right: 121 122 123
    especificadorCompleto (126)
        on left: 121 122 123
        on right: 118 119
    tipoAlmacenamiento (127)
        on left: 124 125
        on right: 121
    calificadorTipo (128)
        on left: 126 127 128 129 130
        on right: 123 156 172 173
    listaDeclaradores (129)
        on left: 131 132
        on right: 116 132
    declarador (130)
        on left: 133
        on right: 131 132
    opcionPostDeclarador (131)
        on left: 134 135
        on right: 133
    opcionComa (132)
        on left: 136 137
        on right: 141
    listaInicializadores (133)
        on left: 138 139
        on right: 139 141
    inicializador (134)
        on left: 140 141
        on right: 135 138 139
    especificadorTipo (135)
        on left: 142 143 144
        on right: 122 155
    especificadorStructUnion (136)
        on left: 145
        on right: 143
    structUnion (137)
        on left: 146 147
        on right: 145
    cuerpoEspecificador (138)
        on left: 148 149
        on right: 145
    cuerpoStructOp (139)
        on left: 150 151
        on right: 149
    listaDeclaracionesStruct (140)
        on left: 152 153
        on right: 148 150 153
    declaracionStruct (141)
        on left: 154
        on right: 152 153
    listaCalificadores (142)
        on left: 155 156
        on right: 154 157
    listaCalificadoresOp (143)
        on left: 157 158
        on right: 155 156
    declaradoresStruct (144)
        on left: 159 160
        on right: 154 160
    declaStruct (145)
        on left: 161 162
        on right: 159 160
    declaSi (146)
        on left: 163
        on right: 161
    expConstanteOp (147)
        on left: 164 165
        on right: 163 177
    decla (148)
        on left: 166
        on right: 115 117 133 163 175 190
    punteroOp (149)
        on left: 167 168
        on right: 166 169
    puntero (150)
        on left: 169
        on right: 167
    listaCalificadoresTipoOp (151)
        on left: 170 171
        on right: 169
    listaCalificadoresTipo (152)
        on left: 172 173
        on right: 170 173
    declaradorDirecto (153)
        on left: 174 175 176
        on right: 166 176
    continuacionDeclaradorDirecto (154)
        on left: 177 178
        on right: 176
    opcional (155)
        on left: 179 180 181 182
        on right: 178
    listaTiposParametros (156)
        on left: 183
        on right: 180
    opcionalListaParametros (157)
        on left: 184 185
        on right: 183
    listaParametros (158)
        on left: 186 187
        on right: 183 187
    declaracionParametro (159)
        on left: 188
        on right: 186 187
    opcionesDecla (160)
        on left: 189 190
        on right: 188
    listaIdentificadores (161)
        on left: 191 192
        on right: 181 192
    especificadorEnum (162)
        on left: 193
        on right: 144
    opcionalEspecificadorEnum (163)
        on left: 194 195
        on right: 193
    opcionalListaEnumeradores (164)
        on left: 196 197
        on right: 194
    listaEnumeradores (165)
        on left: 198 199
        on right: 195 196 199
    enumerador (166)
        on left: 200
        on right: 198 199
    opcionalEnumerador (167)
        on left: 201 202
        on right: 200


State 0

    0 $accept: • programa $end
    1 programa: • unidadTraduccion
    2 unidadTraduccion: • declaracionExterna
    3                 | • unidadTraduccion declaracionExterna
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  113 declaracionExterna: • definicionFuncion
  114                   | • declaracion
  115 definicionFuncion: • especificadorDeclaracion decla listaDeclaracionOp sentCompuesta
  116 declaracion: • especificadorDeclaracion listaDeclaradores ';'
  117            | • especificadorDeclaracion decla ';'
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    programa                  go to state 20
    unidadTraduccion          go to state 21
    tipoDato                  go to state 22
    declaracionExterna        go to state 23
    definicionFuncion         go to state 24
    declaracion               go to state 25
    especificadorDeclaracion  go to state 26
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    especificadorEnum         go to state 33


State 1

  193 especificadorEnum: ENUM • opcionalEspecificadorEnum
  194 opcionalEspecificadorEnum: • IDENTIFICADOR opcionalListaEnumeradores
  195                          | • '{' listaEnumeradores '}'

    IDENTIFICADOR  shift, and go to state 34
    '{'            shift, and go to state 35

    opcionalEspecificadorEnum  go to state 36


State 2

  146 structUnion: STRUCT •

    $default  reduce using rule 146 (structUnion)


State 3

  147 structUnion: UNION •

    $default  reduce using rule 147 (structUnion)


State 4

  103 tipoDato: INT_TYPE •

    $default  reduce using rule 103 (tipoDato)


State 5

  104 tipoDato: FLOAT •

    $default  reduce using rule 104 (tipoDato)


State 6

  105 tipoDato: DOUBLE •

    $default  reduce using rule 105 (tipoDato)


State 7

  106 tipoDato: CHAR •

    $default  reduce using rule 106 (tipoDato)


State 8

  107 tipoDato: VOID •

    $default  reduce using rule 107 (tipoDato)


State 9

  108 tipoDato: SHORT •

    $default  reduce using rule 108 (tipoDato)


State 10

  109 tipoDato: LONG •

    $default  reduce using rule 109 (tipoDato)


State 11

  110 tipoDato: UNSIGNED •

    $default  reduce using rule 110 (tipoDato)


State 12

  111 tipoDato: SIGNED •

    $default  reduce using rule 111 (tipoDato)


State 13

  124 tipoAlmacenamiento: CONST •

    $default  reduce using rule 124 (tipoAlmacenamiento)


State 14

  125 tipoAlmacenamiento: VOLATILE •

    $default  reduce using rule 125 (tipoAlmacenamiento)


State 15

  126 calificadorTipo: TYPEDEF •

    $default  reduce using rule 126 (calificadorTipo)


State 16

  127 calificadorTipo: STATIC •

    $default  reduce using rule 127 (calificadorTipo)


State 17

  128 calificadorTipo: EXTERN •

    $default  reduce using rule 128 (calificadorTipo)


State 18

  129 calificadorTipo: AUTO •

    $default  reduce using rule 129 (calificadorTipo)


State 19

  130 calificadorTipo: REGISTER •

    $default  reduce using rule 130 (calificadorTipo)


State 20

    0 $accept: programa • $end

    $end  shift, and go to state 37


State 21

    1 programa: unidadTraduccion •  [$end]
    3 unidadTraduccion: unidadTraduccion • declaracionExterna
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  113 declaracionExterna: • definicionFuncion
  114                   | • declaracion
  115 definicionFuncion: • especificadorDeclaracion decla listaDeclaracionOp sentCompuesta
  116 declaracion: • especificadorDeclaracion listaDeclaradores ';'
  117            | • especificadorDeclaracion decla ';'
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 1 (programa)

    tipoDato                  go to state 22
    declaracionExterna        go to state 38
    definicionFuncion         go to state 24
    declaracion               go to state 25
    especificadorDeclaracion  go to state 26
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    especificadorEnum         go to state 33


State 22

  142 especificadorTipo: tipoDato •

    $default  reduce using rule 142 (especificadorTipo)


State 23

    2 unidadTraduccion: declaracionExterna •

    $default  reduce using rule 2 (unidadTraduccion)


State 24

  113 declaracionExterna: definicionFuncion •

    $default  reduce using rule 113 (declaracionExterna)


State 25

  114 declaracionExterna: declaracion •

    $default  reduce using rule 114 (declaracionExterna)


State 26

  115 definicionFuncion: especificadorDeclaracion • decla listaDeclaracionOp sentCompuesta
  116 declaracion: especificadorDeclaracion • listaDeclaradores ';'
  117            | especificadorDeclaracion • decla ';'
  131 listaDeclaradores: • declarador
  132                  | • listaDeclaradores ',' declarador
  133 declarador: • decla opcionPostDeclarador
  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp

    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    listaDeclaradores  go to state 40
    declarador         go to state 41
    decla              go to state 42
    punteroOp          go to state 43
    puntero            go to state 44


State 27

  118 especificadorDeclaracion: especificadorCompleto •

    $default  reduce using rule 118 (especificadorDeclaracion)


State 28

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  119 especificadorDeclaracionOp: • especificadorCompleto
  120                           | ε •  [IDENTIFICADOR, ',', ')', '(', '*']
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  121                      | tipoAlmacenamiento • especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 120 (especificadorDeclaracionOp)

    tipoDato                    go to state 22
    especificadorDeclaracionOp  go to state 45
    especificadorCompleto       go to state 46
    tipoAlmacenamiento          go to state 28
    calificadorTipo             go to state 29
    especificadorTipo           go to state 30
    especificadorStructUnion    go to state 31
    structUnion                 go to state 32
    especificadorEnum           go to state 33


State 29

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  119 especificadorDeclaracionOp: • especificadorCompleto
  120                           | ε •  [IDENTIFICADOR, ',', ')', '(', '*']
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  123                      | calificadorTipo • especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 120 (especificadorDeclaracionOp)

    tipoDato                    go to state 22
    especificadorDeclaracionOp  go to state 47
    especificadorCompleto       go to state 46
    tipoAlmacenamiento          go to state 28
    calificadorTipo             go to state 29
    especificadorTipo           go to state 30
    especificadorStructUnion    go to state 31
    structUnion                 go to state 32
    especificadorEnum           go to state 33


State 30

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  119 especificadorDeclaracionOp: • especificadorCompleto
  120                           | ε •  [IDENTIFICADOR, ',', ')', '(', '*']
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  122                      | especificadorTipo • especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 120 (especificadorDeclaracionOp)

    tipoDato                    go to state 22
    especificadorDeclaracionOp  go to state 48
    especificadorCompleto       go to state 46
    tipoAlmacenamiento          go to state 28
    calificadorTipo             go to state 29
    especificadorTipo           go to state 30
    especificadorStructUnion    go to state 31
    structUnion                 go to state 32
    especificadorEnum           go to state 33


State 31

  143 especificadorTipo: especificadorStructUnion •

    $default  reduce using rule 143 (especificadorTipo)


State 32

  145 especificadorStructUnion: structUnion • cuerpoEspecificador
  148 cuerpoEspecificador: • '{' listaDeclaracionesStruct '}'
  149                    | • IDENTIFICADOR cuerpoStructOp

    IDENTIFICADOR  shift, and go to state 49
    '{'            shift, and go to state 50

    cuerpoEspecificador  go to state 51


State 33

  144 especificadorTipo: especificadorEnum •

    $default  reduce using rule 144 (especificadorTipo)


State 34

  194 opcionalEspecificadorEnum: IDENTIFICADOR • opcionalListaEnumeradores
  196 opcionalListaEnumeradores: • '{' listaEnumeradores '}'
  197                          | ε •  [IDENTIFICADOR, ENUM, STRUCT, UNION, INT_TYPE, FLOAT, DOUBLE, CHAR, VOID, SHORT, LONG, UNSIGNED, SIGNED, CONST, VOLATILE, TYPEDEF, STATIC, EXTERN, AUTO, REGISTER, ',', ')', '(', ':', '*']

    '{'  shift, and go to state 52

    $default  reduce using rule 197 (opcionalListaEnumeradores)

    opcionalListaEnumeradores  go to state 53


State 35

  195 opcionalEspecificadorEnum: '{' • listaEnumeradores '}'
  198 listaEnumeradores: • enumerador
  199                  | • listaEnumeradores ',' enumerador
  200 enumerador: • IDENTIFICADOR opcionalEnumerador

    IDENTIFICADOR  shift, and go to state 54

    listaEnumeradores  go to state 55
    enumerador         go to state 56


State 36

  193 especificadorEnum: ENUM opcionalEspecificadorEnum •

    $default  reduce using rule 193 (especificadorEnum)


State 37

    0 $accept: programa $end •

    $default  accept


State 38

    3 unidadTraduccion: unidadTraduccion declaracionExterna •

    $default  reduce using rule 3 (unidadTraduccion)


State 39

  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  169 puntero: '*' • listaCalificadoresTipoOp punteroOp
  170 listaCalificadoresTipoOp: • listaCalificadoresTipo
  171                         | ε •  [IDENTIFICADOR, '(', '*']
  172 listaCalificadoresTipo: • calificadorTipo
  173                       | • listaCalificadoresTipo calificadorTipo

    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 171 (listaCalificadoresTipoOp)

    calificadorTipo           go to state 57
    listaCalificadoresTipoOp  go to state 58
    listaCalificadoresTipo    go to state 59


State 40

  116 declaracion: especificadorDeclaracion listaDeclaradores • ';'
  132 listaDeclaradores: listaDeclaradores • ',' declarador

    ','  shift, and go to state 60
    ';'  shift, and go to state 61


State 41

  131 listaDeclaradores: declarador •

    $default  reduce using rule 131 (listaDeclaradores)


State 42

   12 listaDeclaraciones: • declaracion listaDeclaraciones
   13                   | • error
   14 listaDeclaracionOp: • listaDeclaraciones
   15                   | ε •  ['{']
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  115 definicionFuncion: especificadorDeclaracion decla • listaDeclaracionOp sentCompuesta
  116 declaracion: • especificadorDeclaracion listaDeclaradores ';'
  117            | • especificadorDeclaracion decla ';'
  117            | especificadorDeclaracion decla • ';'
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  133 declarador: decla • opcionPostDeclarador
  134 opcionPostDeclarador: ε •  [',']
  135                     | • '=' inicializador
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    error     shift, and go to state 62
    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19
    '='       shift, and go to state 63
    ';'       shift, and go to state 64

    ','  reduce using rule 134 (opcionPostDeclarador)
    '{'  reduce using rule 15 (listaDeclaracionOp)

    listaDeclaraciones        go to state 65
    listaDeclaracionOp        go to state 66
    tipoDato                  go to state 22
    declaracion               go to state 67
    especificadorDeclaracion  go to state 68
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    opcionPostDeclarador      go to state 69
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    especificadorEnum         go to state 33


State 43

  166 decla: punteroOp • declaradorDirecto
  174 declaradorDirecto: • IDENTIFICADOR
  175                  | • '(' decla ')'
  176                  | • declaradorDirecto continuacionDeclaradorDirecto

    IDENTIFICADOR  shift, and go to state 70
    '('            shift, and go to state 71

    declaradorDirecto  go to state 72


State 44

  167 punteroOp: puntero •

    $default  reduce using rule 167 (punteroOp)


State 45

  121 especificadorCompleto: tipoAlmacenamiento especificadorDeclaracionOp •

    $default  reduce using rule 121 (especificadorCompleto)


State 46

  119 especificadorDeclaracionOp: especificadorCompleto •

    $default  reduce using rule 119 (especificadorDeclaracionOp)


State 47

  123 especificadorCompleto: calificadorTipo especificadorDeclaracionOp •

    $default  reduce using rule 123 (especificadorCompleto)


State 48

  122 especificadorCompleto: especificadorTipo especificadorDeclaracionOp •

    $default  reduce using rule 122 (especificadorCompleto)


State 49

  149 cuerpoEspecificador: IDENTIFICADOR • cuerpoStructOp
  150 cuerpoStructOp: • '{' listaDeclaracionesStruct '}'
  151               | ε •  [IDENTIFICADOR, ENUM, STRUCT, UNION, INT_TYPE, FLOAT, DOUBLE, CHAR, VOID, SHORT, LONG, UNSIGNED, SIGNED, CONST, VOLATILE, TYPEDEF, STATIC, EXTERN, AUTO, REGISTER, ',', ')', '(', ':', '*']

    '{'  shift, and go to state 73

    $default  reduce using rule 151 (cuerpoStructOp)

    cuerpoStructOp  go to state 74


State 50

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  148 cuerpoEspecificador: '{' • listaDeclaracionesStruct '}'
  152 listaDeclaracionesStruct: • declaracionStruct
  153                         | • listaDeclaracionesStruct declaracionStruct
  154 declaracionStruct: • listaCalificadores declaradoresStruct ';'
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    listaDeclaracionesStruct  go to state 77
    declaracionStruct         go to state 78
    listaCalificadores        go to state 79
    especificadorEnum         go to state 33


State 51

  145 especificadorStructUnion: structUnion cuerpoEspecificador •

    $default  reduce using rule 145 (especificadorStructUnion)


State 52

  196 opcionalListaEnumeradores: '{' • listaEnumeradores '}'
  198 listaEnumeradores: • enumerador
  199                  | • listaEnumeradores ',' enumerador
  200 enumerador: • IDENTIFICADOR opcionalEnumerador

    IDENTIFICADOR  shift, and go to state 54

    listaEnumeradores  go to state 80
    enumerador         go to state 56


State 53

  194 opcionalEspecificadorEnum: IDENTIFICADOR opcionalListaEnumeradores •

    $default  reduce using rule 194 (opcionalEspecificadorEnum)


State 54

  200 enumerador: IDENTIFICADOR • opcionalEnumerador
  201 opcionalEnumerador: • '=' expresion
  202                   | ε •  [',', '}']

    '='  shift, and go to state 81

    $default  reduce using rule 202 (opcionalEnumerador)

    opcionalEnumerador  go to state 82


State 55

  195 opcionalEspecificadorEnum: '{' listaEnumeradores • '}'
  199 listaEnumeradores: listaEnumeradores • ',' enumerador

    ','  shift, and go to state 83
    '}'  shift, and go to state 84


State 56

  198 listaEnumeradores: enumerador •

    $default  reduce using rule 198 (listaEnumeradores)


State 57

  172 listaCalificadoresTipo: calificadorTipo •

    $default  reduce using rule 172 (listaCalificadoresTipo)


State 58

  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp
  169        | '*' listaCalificadoresTipoOp • punteroOp

    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    punteroOp  go to state 85
    puntero    go to state 44


State 59

  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  170 listaCalificadoresTipoOp: listaCalificadoresTipo •  [IDENTIFICADOR, '(', '*']
  173 listaCalificadoresTipo: listaCalificadoresTipo • calificadorTipo

    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 170 (listaCalificadoresTipoOp)

    calificadorTipo  go to state 86


State 60

  132 listaDeclaradores: listaDeclaradores ',' • declarador
  133 declarador: • decla opcionPostDeclarador
  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp

    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    declarador  go to state 87
    decla       go to state 88
    punteroOp   go to state 43
    puntero     go to state 44


State 61

  116 declaracion: especificadorDeclaracion listaDeclaradores ';' •

    $default  reduce using rule 116 (declaracion)


State 62

   13 listaDeclaraciones: error •

    $default  reduce using rule 13 (listaDeclaraciones)


State 63

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  135 opcionPostDeclarador: '=' • inicializador
  140 inicializador: • expAsignacion
  141              | • '{' listaInicializadores opcionComa '}'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 98
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAsignacion      go to state 103
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115
    inicializador      go to state 116


State 64

  117 declaracion: especificadorDeclaracion decla ';' •

    $default  reduce using rule 117 (declaracion)


State 65

   14 listaDeclaracionOp: listaDeclaraciones •

    $default  reduce using rule 14 (listaDeclaracionOp)


State 66

   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
  115 definicionFuncion: especificadorDeclaracion decla listaDeclaracionOp • sentCompuesta

    '{'  shift, and go to state 117

    sentCompuesta  go to state 118


State 67

   12 listaDeclaraciones: • declaracion listaDeclaraciones
   12                   | declaracion • listaDeclaraciones
   13                   | • error
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  116 declaracion: • especificadorDeclaracion listaDeclaradores ';'
  117            | • especificadorDeclaracion decla ';'
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    error     shift, and go to state 62
    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    listaDeclaraciones        go to state 119
    tipoDato                  go to state 22
    declaracion               go to state 67
    especificadorDeclaracion  go to state 68
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    especificadorEnum         go to state 33


State 68

  116 declaracion: especificadorDeclaracion • listaDeclaradores ';'
  117            | especificadorDeclaracion • decla ';'
  131 listaDeclaradores: • declarador
  132                  | • listaDeclaradores ',' declarador
  133 declarador: • decla opcionPostDeclarador
  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp

    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    listaDeclaradores  go to state 40
    declarador         go to state 41
    decla              go to state 120
    punteroOp          go to state 43
    puntero            go to state 44


State 69

  133 declarador: decla opcionPostDeclarador •

    $default  reduce using rule 133 (declarador)


State 70

  174 declaradorDirecto: IDENTIFICADOR •

    $default  reduce using rule 174 (declaradorDirecto)


State 71

  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp
  175 declaradorDirecto: '(' • decla ')'

    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    decla      go to state 121
    punteroOp  go to state 43
    puntero    go to state 44


State 72

  166 decla: punteroOp declaradorDirecto •  [error, ENUM, STRUCT, UNION, INT_TYPE, FLOAT, DOUBLE, CHAR, VOID, SHORT, LONG, UNSIGNED, SIGNED, CONST, VOLATILE, TYPEDEF, STATIC, EXTERN, AUTO, REGISTER, ',', '=', ';', ')', '{', ':']
  176 declaradorDirecto: declaradorDirecto • continuacionDeclaradorDirecto
  177 continuacionDeclaradorDirecto: • '[' expConstanteOp ']'
  178                              | • '(' opcional

    '('  shift, and go to state 122
    '['  shift, and go to state 123

    $default  reduce using rule 166 (decla)

    continuacionDeclaradorDirecto  go to state 124


State 73

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  150 cuerpoStructOp: '{' • listaDeclaracionesStruct '}'
  152 listaDeclaracionesStruct: • declaracionStruct
  153                         | • listaDeclaracionesStruct declaracionStruct
  154 declaracionStruct: • listaCalificadores declaradoresStruct ';'
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    listaDeclaracionesStruct  go to state 125
    declaracionStruct         go to state 78
    listaCalificadores        go to state 79
    especificadorEnum         go to state 33


State 74

  149 cuerpoEspecificador: IDENTIFICADOR cuerpoStructOp •

    $default  reduce using rule 149 (cuerpoEspecificador)


State 75

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  156                   | calificadorTipo • listaCalificadoresOp
  157 listaCalificadoresOp: • listaCalificadores
  158                     | ε •  [IDENTIFICADOR, '(', ':', '*']
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 158 (listaCalificadoresOp)

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    listaCalificadores        go to state 126
    listaCalificadoresOp      go to state 127
    especificadorEnum         go to state 33


State 76

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  155                   | especificadorTipo • listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  157 listaCalificadoresOp: • listaCalificadores
  158                     | ε •  [IDENTIFICADOR, '(', ':', '*']
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    $default  reduce using rule 158 (listaCalificadoresOp)

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    listaCalificadores        go to state 126
    listaCalificadoresOp      go to state 128
    especificadorEnum         go to state 33


State 77

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  148 cuerpoEspecificador: '{' listaDeclaracionesStruct • '}'
  153 listaDeclaracionesStruct: listaDeclaracionesStruct • declaracionStruct
  154 declaracionStruct: • listaCalificadores declaradoresStruct ';'
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19
    '}'       shift, and go to state 129

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    declaracionStruct         go to state 130
    listaCalificadores        go to state 79
    especificadorEnum         go to state 33


State 78

  152 listaDeclaracionesStruct: declaracionStruct •

    $default  reduce using rule 152 (listaDeclaracionesStruct)


State 79

  154 declaracionStruct: listaCalificadores • declaradoresStruct ';'
  159 declaradoresStruct: • declaStruct
  160                   | • declaradoresStruct ',' declaStruct
  161 declaStruct: • declaSi
  162            | • ':' expresion
  163 declaSi: • decla expConstanteOp
  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp

    ':'  shift, and go to state 131
    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    declaradoresStruct  go to state 132
    declaStruct         go to state 133
    declaSi             go to state 134
    decla               go to state 135
    punteroOp           go to state 43
    puntero             go to state 44


State 80

  196 opcionalListaEnumeradores: '{' listaEnumeradores • '}'
  199 listaEnumeradores: listaEnumeradores • ',' enumerador

    ','  shift, and go to state 83
    '}'  shift, and go to state 136


State 81

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  201 opcionalEnumerador: '=' • expresion

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 137
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 82

  200 enumerador: IDENTIFICADOR opcionalEnumerador •

    $default  reduce using rule 200 (enumerador)


State 83

  199 listaEnumeradores: listaEnumeradores ',' • enumerador
  200 enumerador: • IDENTIFICADOR opcionalEnumerador

    IDENTIFICADOR  shift, and go to state 54

    enumerador  go to state 139


State 84

  195 opcionalEspecificadorEnum: '{' listaEnumeradores '}' •

    $default  reduce using rule 195 (opcionalEspecificadorEnum)


State 85

  169 puntero: '*' listaCalificadoresTipoOp punteroOp •

    $default  reduce using rule 169 (puntero)


State 86

  173 listaCalificadoresTipo: listaCalificadoresTipo calificadorTipo •

    $default  reduce using rule 173 (listaCalificadoresTipo)


State 87

  132 listaDeclaradores: listaDeclaradores ',' declarador •

    $default  reduce using rule 132 (listaDeclaradores)


State 88

  133 declarador: decla • opcionPostDeclarador
  134 opcionPostDeclarador: ε •  [',', ';']
  135                     | • '=' inicializador

    '='  shift, and go to state 63

    $default  reduce using rule 134 (opcionPostDeclarador)

    opcionPostDeclarador  go to state 69


State 89

   88 expPostfijo: IDENTIFICADOR • opcionPostfijo
   89            | IDENTIFICADOR • '(' ')'
   90 opcionPostfijo: • '[' expresion ']'
   92               | • '(' $@3 listaArgumentosNoVacia ')'
   93               | • PTR_OP IDENTIFICADOR
   97 expPrimaria: IDENTIFICADOR •  [error, IDENTIFICADOR, LITERAL_CADENA, CONSTANTE, ENTERO, NUM, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, EQ, NEQ, LE, GE, AND, OR, INC_OP, DEC_OP, ',', '=', ';', ')', '}', ':', '?', '<', '>', '+', '-', '*', '/', '%', ']']

    PTR_OP  shift, and go to state 140
    '('     shift, and go to state 141
    '['     shift, and go to state 142

    $default  reduce using rule 97 (expPrimaria)

    opcionPostfijo  go to state 143


State 90

  101 expPrimaria: LITERAL_CADENA •

    $default  reduce using rule 101 (expPrimaria)


State 91

  100 expPrimaria: CONSTANTE •

    $default  reduce using rule 100 (expPrimaria)


State 92

   79 expUnaria: SIZEOF • '(' nombreTipo ')'

    '('  shift, and go to state 144


State 93

   98 expPrimaria: ENTERO •

    $default  reduce using rule 98 (expPrimaria)


State 94

   99 expPrimaria: NUM •

    $default  reduce using rule 99 (expPrimaria)


State 95

   80 opcionIncDec: INC_OP •

    $default  reduce using rule 80 (opcionIncDec)


State 96

   81 opcionIncDec: DEC_OP •

    $default  reduce using rule 81 (opcionIncDec)


State 97

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  102            | '(' • expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 145
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 98

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  138 listaInicializadores: • inicializador
  139                     | • listaInicializadores ',' inicializador
  140 inicializador: • expAsignacion
  141              | • '{' listaInicializadores opcionComa '}'
  141              | '{' • listaInicializadores opcionComa '}'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 98
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAsignacion         go to state 103
    expCondicional        go to state 104
    expOr                 go to state 105
    expAnd                go to state 106
    expIgualdad           go to state 107
    expRelacional         go to state 108
    expAditiva            go to state 109
    expMultiplicativa     go to state 110
    expUnaria             go to state 111
    opcionIncDec          go to state 112
    operUnario            go to state 113
    expPostfijo           go to state 114
    expPrimaria           go to state 115
    listaInicializadores  go to state 146
    inicializador         go to state 147


State 99

   84 operUnario: '-' •

    $default  reduce using rule 84 (operUnario)


State 100

   83 operUnario: '*' •

    $default  reduce using rule 83 (operUnario)


State 101

   82 operUnario: '&' •

    $default  reduce using rule 82 (operUnario)


State 102

   85 operUnario: '!' •

    $default  reduce using rule 85 (operUnario)


State 103

  140 inicializador: expAsignacion •

    $default  reduce using rule 140 (inicializador)


State 104

   42 expAsignacion: expCondicional •

    $default  reduce using rule 42 (expAsignacion)


State 105

   51 expCondicional: expOr •  [error, ',', ';', ')', '}', ':', ']']
   52               | expOr • '?' expresion ':' expCondicional
   54 expOr: expOr • OR expAnd

    OR   shift, and go to state 148
    '?'  shift, and go to state 149

    $default  reduce using rule 51 (expCondicional)


State 106

   53 expOr: expAnd •  [error, OR, ',', ';', ')', '}', ':', '?', ']']
   56 expAnd: expAnd • AND expIgualdad

    AND  shift, and go to state 150

    $default  reduce using rule 53 (expOr)


State 107

   55 expAnd: expIgualdad •  [error, AND, OR, ',', ';', ')', '}', ':', '?', ']']
   58 expIgualdad: expIgualdad • opcionIgualdad
   59 opcionIgualdad: • EQ expRelacional
   60               | • NEQ expRelacional

    EQ   shift, and go to state 151
    NEQ  shift, and go to state 152

    $default  reduce using rule 55 (expAnd)

    opcionIgualdad  go to state 153


State 108

   57 expIgualdad: expRelacional •  [error, EQ, NEQ, AND, OR, ',', ';', ')', '}', ':', '?', ']']
   62 expRelacional: expRelacional • opcionRelacional
   63 opcionRelacional: • '<' expAditiva
   64                 | • '>' expAditiva
   65                 | • LE expAditiva
   66                 | • GE expAditiva

    LE   shift, and go to state 154
    GE   shift, and go to state 155
    '<'  shift, and go to state 156
    '>'  shift, and go to state 157

    $default  reduce using rule 57 (expIgualdad)

    opcionRelacional  go to state 158


State 109

   61 expRelacional: expAditiva •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', ']']
   68 expAditiva: expAditiva • opcionAditiva
   69 opcionAditiva: • '+' expMultiplicativa
   70              | • '-' expMultiplicativa

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 61 (expRelacional)

    opcionAditiva  go to state 161


State 110

   67 expAditiva: expMultiplicativa •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', '+', '-', ']']
   72 expMultiplicativa: expMultiplicativa • '*' expUnaria
   73                  | expMultiplicativa • '/' expUnaria
   74                  | expMultiplicativa • '%' expUnaria

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 67 (expAditiva)


State 111

   43 expAsignacion: expUnaria • operAsignacion expAsignacion
   44              | expUnaria • operAsignacion error
   45 operAsignacion: • '='
   46               | • ADD_ASSIGN
   47               | • SUB_ASSIGN
   48               | • MUL_ASSIGN
   49               | • DIV_ASSIGN
   50               | • MOD_ASSIGN
   71 expMultiplicativa: expUnaria •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', '+', '-', '*', '/', '%', ']']

    ADD_ASSIGN  shift, and go to state 165
    SUB_ASSIGN  shift, and go to state 166
    MUL_ASSIGN  shift, and go to state 167
    DIV_ASSIGN  shift, and go to state 168
    MOD_ASSIGN  shift, and go to state 169
    '='         shift, and go to state 170

    $default  reduce using rule 71 (expMultiplicativa)

    operAsignacion  go to state 171


State 112

   76 expUnaria: opcionIncDec • expPostfijo
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    '('             shift, and go to state 97

    expPostfijo  go to state 172
    expPrimaria  go to state 115


State 113

   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   78          | operUnario • expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expUnaria     go to state 173
    opcionIncDec  go to state 112
    operUnario    go to state 113
    expPostfijo   go to state 114
    expPrimaria   go to state 115


State 114

   75 expUnaria: expPostfijo •  [error, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, EQ, NEQ, LE, GE, AND, OR, ',', '=', ';', ')', '}', ':', '?', '<', '>', '+', '-', '*', '/', '%', ']']
   77          | expPostfijo • opcionIncDec
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   87 expPostfijo: expPostfijo • expPrimaria
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 174
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97

    $default  reduce using rule 75 (expUnaria)

    opcionIncDec  go to state 175
    expPrimaria   go to state 176


State 115

   86 expPostfijo: expPrimaria •

    $default  reduce using rule 86 (expPostfijo)


State 116

  135 opcionPostDeclarador: '=' inicializador •

    $default  reduce using rule 135 (opcionPostDeclarador)


State 117

   10 $@1: ε •
   11 sentCompuesta: '{' • $@1 listaDeclaraciones listaSentenciasOp '}'

    $default  reduce using rule 10 ($@1)

    $@1  go to state 177


State 118

  115 definicionFuncion: especificadorDeclaracion decla listaDeclaracionOp sentCompuesta •

    $default  reduce using rule 115 (definicionFuncion)


State 119

   12 listaDeclaraciones: declaracion listaDeclaraciones •

    $default  reduce using rule 12 (listaDeclaraciones)


State 120

  117 declaracion: especificadorDeclaracion decla • ';'
  133 declarador: decla • opcionPostDeclarador
  134 opcionPostDeclarador: ε •  [',']
  135                     | • '=' inicializador

    '='  shift, and go to state 63
    ';'  shift, and go to state 64

    $default  reduce using rule 134 (opcionPostDeclarador)

    opcionPostDeclarador  go to state 69


State 121

  175 declaradorDirecto: '(' decla • ')'

    ')'  shift, and go to state 178


State 122

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  178 continuacionDeclaradorDirecto: '(' • opcional
  179 opcional: • ')'
  180         | • listaTiposParametros ')'
  181         | • listaIdentificadores ')'
  182         | • tipoDato ')'
  183 listaTiposParametros: • listaParametros opcionalListaParametros
  186 listaParametros: • declaracionParametro
  187                | • listaParametros ',' declaracionParametro
  188 declaracionParametro: • especificadorDeclaracion opcionesDecla
  191 listaIdentificadores: • IDENTIFICADOR
  192                     | • listaIdentificadores ',' IDENTIFICADOR
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    IDENTIFICADOR  shift, and go to state 179
    ENUM           shift, and go to state 1
    STRUCT         shift, and go to state 2
    UNION          shift, and go to state 3
    INT_TYPE       shift, and go to state 4
    FLOAT          shift, and go to state 5
    DOUBLE         shift, and go to state 6
    CHAR           shift, and go to state 7
    VOID           shift, and go to state 8
    SHORT          shift, and go to state 9
    LONG           shift, and go to state 10
    UNSIGNED       shift, and go to state 11
    SIGNED         shift, and go to state 12
    CONST          shift, and go to state 13
    VOLATILE       shift, and go to state 14
    TYPEDEF        shift, and go to state 15
    STATIC         shift, and go to state 16
    EXTERN         shift, and go to state 17
    AUTO           shift, and go to state 18
    REGISTER       shift, and go to state 19
    ')'            shift, and go to state 180

    tipoDato                  go to state 181
    especificadorDeclaracion  go to state 182
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    opcional                  go to state 183
    listaTiposParametros      go to state 184
    listaParametros           go to state 185
    declaracionParametro      go to state 186
    listaIdentificadores      go to state 187
    especificadorEnum         go to state 33


State 123

  164 expConstanteOp: • ':' expresion
  165               | ε •  [']']
  177 continuacionDeclaradorDirecto: '[' • expConstanteOp ']'

    ':'  shift, and go to state 188

    $default  reduce using rule 165 (expConstanteOp)

    expConstanteOp  go to state 189


State 124

  176 declaradorDirecto: declaradorDirecto continuacionDeclaradorDirecto •

    $default  reduce using rule 176 (declaradorDirecto)


State 125

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  150 cuerpoStructOp: '{' listaDeclaracionesStruct • '}'
  153 listaDeclaracionesStruct: listaDeclaracionesStruct • declaracionStruct
  154 declaracionStruct: • listaCalificadores declaradoresStruct ';'
  155 listaCalificadores: • especificadorTipo listaCalificadoresOp
  156                   | • calificadorTipo listaCalificadoresOp
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19
    '}'       shift, and go to state 190

    tipoDato                  go to state 22
    calificadorTipo           go to state 75
    especificadorTipo         go to state 76
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    declaracionStruct         go to state 130
    listaCalificadores        go to state 79
    especificadorEnum         go to state 33


State 126

  157 listaCalificadoresOp: listaCalificadores •

    $default  reduce using rule 157 (listaCalificadoresOp)


State 127

  156 listaCalificadores: calificadorTipo listaCalificadoresOp •

    $default  reduce using rule 156 (listaCalificadores)


State 128

  155 listaCalificadores: especificadorTipo listaCalificadoresOp •

    $default  reduce using rule 155 (listaCalificadores)


State 129

  148 cuerpoEspecificador: '{' listaDeclaracionesStruct '}' •

    $default  reduce using rule 148 (cuerpoEspecificador)


State 130

  153 listaDeclaracionesStruct: listaDeclaracionesStruct declaracionStruct •

    $default  reduce using rule 153 (listaDeclaracionesStruct)


State 131

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  162 declaStruct: ':' • expresion

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 191
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 132

  154 declaracionStruct: listaCalificadores declaradoresStruct • ';'
  160 declaradoresStruct: declaradoresStruct • ',' declaStruct

    ','  shift, and go to state 192
    ';'  shift, and go to state 193


State 133

  159 declaradoresStruct: declaStruct •

    $default  reduce using rule 159 (declaradoresStruct)


State 134

  161 declaStruct: declaSi •

    $default  reduce using rule 161 (declaStruct)


State 135

  163 declaSi: decla • expConstanteOp
  164 expConstanteOp: • ':' expresion
  165               | ε •  [',', ';']

    ':'  shift, and go to state 188

    $default  reduce using rule 165 (expConstanteOp)

    expConstanteOp  go to state 194


State 136

  196 opcionalListaEnumeradores: '{' listaEnumeradores '}' •

    $default  reduce using rule 196 (opcionalListaEnumeradores)


State 137

  201 opcionalEnumerador: '=' expresion •

    $default  reduce using rule 201 (opcionalEnumerador)


State 138

   40 expresion: expAsignacion •  [error, ';', ')', '}', ':', ']']
   41          | expAsignacion • ',' expresion

    ','  shift, and go to state 195

    $default  reduce using rule 40 (expresion)


State 139

  199 listaEnumeradores: listaEnumeradores ',' enumerador •

    $default  reduce using rule 199 (listaEnumeradores)


State 140

   93 opcionPostfijo: PTR_OP • IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 196


State 141

   89 expPostfijo: IDENTIFICADOR '(' • ')'
   91 $@3: ε •  [IDENTIFICADOR, LITERAL_CADENA, CONSTANTE, SIZEOF, ENTERO, NUM, INC_OP, DEC_OP, '(', '-', '*', '&', '!']
   92 opcionPostfijo: '(' • $@3 listaArgumentosNoVacia ')'

    ')'  shift, and go to state 197

    $default  reduce using rule 91 ($@3)

    $@3  go to state 198


State 142

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   90 opcionPostfijo: '[' • expresion ']'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 199
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 143

   88 expPostfijo: IDENTIFICADOR opcionPostfijo •

    $default  reduce using rule 88 (expPostfijo)


State 144

   79 expUnaria: SIZEOF '(' • nombreTipo ')'
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  112 nombreTipo: • tipoDato

    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12

    tipoDato    go to state 200
    nombreTipo  go to state 201


State 145

  102 expPrimaria: '(' expresion • ')'

    ')'  shift, and go to state 202


State 146

  136 opcionComa: • ','
  137           | ε •  ['}']
  139 listaInicializadores: listaInicializadores • ',' inicializador
  141 inicializador: '{' listaInicializadores • opcionComa '}'

    ','  shift, and go to state 203

    $default  reduce using rule 137 (opcionComa)

    opcionComa  go to state 204


State 147

  138 listaInicializadores: inicializador •

    $default  reduce using rule 138 (listaInicializadores)


State 148

   54 expOr: expOr OR • expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAnd             go to state 205
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 149

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   52               | expOr '?' • expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 207
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 150

   56 expAnd: expAnd AND • expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expIgualdad        go to state 208
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 151

   59 opcionIgualdad: EQ • expRelacional
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expRelacional      go to state 209
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 152

   60 opcionIgualdad: NEQ • expRelacional
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expRelacional      go to state 210
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 153

   58 expIgualdad: expIgualdad opcionIgualdad •

    $default  reduce using rule 58 (expIgualdad)


State 154

   65 opcionRelacional: LE • expAditiva
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAditiva         go to state 211
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 155

   66 opcionRelacional: GE • expAditiva
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAditiva         go to state 212
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 156

   63 opcionRelacional: '<' • expAditiva
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAditiva         go to state 213
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 157

   64 opcionRelacional: '>' • expAditiva
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAditiva         go to state 214
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 158

   62 expRelacional: expRelacional opcionRelacional •

    $default  reduce using rule 62 (expRelacional)


State 159

   69 opcionAditiva: '+' • expMultiplicativa
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expMultiplicativa  go to state 215
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 160

   70 opcionAditiva: '-' • expMultiplicativa
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expMultiplicativa  go to state 216
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 161

   68 expAditiva: expAditiva opcionAditiva •

    $default  reduce using rule 68 (expAditiva)


State 162

   72 expMultiplicativa: expMultiplicativa '*' • expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expUnaria     go to state 217
    opcionIncDec  go to state 112
    operUnario    go to state 113
    expPostfijo   go to state 114
    expPrimaria   go to state 115


State 163

   73 expMultiplicativa: expMultiplicativa '/' • expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expUnaria     go to state 218
    opcionIncDec  go to state 112
    operUnario    go to state 113
    expPostfijo   go to state 114
    expPrimaria   go to state 115


State 164

   74 expMultiplicativa: expMultiplicativa '%' • expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expUnaria     go to state 219
    opcionIncDec  go to state 112
    operUnario    go to state 113
    expPostfijo   go to state 114
    expPrimaria   go to state 115


State 165

   46 operAsignacion: ADD_ASSIGN •

    $default  reduce using rule 46 (operAsignacion)


State 166

   47 operAsignacion: SUB_ASSIGN •

    $default  reduce using rule 47 (operAsignacion)


State 167

   48 operAsignacion: MUL_ASSIGN •

    $default  reduce using rule 48 (operAsignacion)


State 168

   49 operAsignacion: DIV_ASSIGN •

    $default  reduce using rule 49 (operAsignacion)


State 169

   50 operAsignacion: MOD_ASSIGN •

    $default  reduce using rule 50 (operAsignacion)


State 170

   45 operAsignacion: '=' •

    $default  reduce using rule 45 (operAsignacion)


State 171

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   43              | expUnaria operAsignacion • expAsignacion
   44              | • expUnaria operAsignacion error
   44              | expUnaria operAsignacion • error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    error           shift, and go to state 220
    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAsignacion      go to state 221
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 172

   76 expUnaria: opcionIncDec expPostfijo •  [error, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, EQ, NEQ, LE, GE, AND, OR, ',', '=', ';', ')', '}', ':', '?', '<', '>', '+', '-', '*', '/', '%', ']']
   87 expPostfijo: expPostfijo • expPrimaria
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 174
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    '('             shift, and go to state 97

    $default  reduce using rule 76 (expUnaria)

    expPrimaria  go to state 176


State 173

   78 expUnaria: operUnario expUnaria •

    $default  reduce using rule 78 (expUnaria)


State 174

   97 expPrimaria: IDENTIFICADOR •

    $default  reduce using rule 97 (expPrimaria)


State 175

   77 expUnaria: expPostfijo opcionIncDec •

    $default  reduce using rule 77 (expUnaria)


State 176

   87 expPostfijo: expPostfijo expPrimaria •

    $default  reduce using rule 87 (expPostfijo)


State 177

   11 sentCompuesta: '{' $@1 • listaDeclaraciones listaSentenciasOp '}'
   12 listaDeclaraciones: • declaracion listaDeclaraciones
   13                   | • error
  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  116 declaracion: • especificadorDeclaracion listaDeclaradores ';'
  117            | • especificadorDeclaracion decla ';'
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    error     shift, and go to state 62
    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    listaDeclaraciones        go to state 222
    tipoDato                  go to state 22
    declaracion               go to state 67
    especificadorDeclaracion  go to state 68
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    especificadorEnum         go to state 33


State 178

  175 declaradorDirecto: '(' decla ')' •

    $default  reduce using rule 175 (declaradorDirecto)


State 179

  191 listaIdentificadores: IDENTIFICADOR •

    $default  reduce using rule 191 (listaIdentificadores)


State 180

  179 opcional: ')' •

    $default  reduce using rule 179 (opcional)


State 181

  142 especificadorTipo: tipoDato •  [IDENTIFICADOR, ENUM, STRUCT, UNION, INT_TYPE, FLOAT, DOUBLE, CHAR, VOID, SHORT, LONG, UNSIGNED, SIGNED, CONST, VOLATILE, TYPEDEF, STATIC, EXTERN, AUTO, REGISTER, ',', '(', '*']
  182 opcional: tipoDato • ')'

    ')'  shift, and go to state 223

    $default  reduce using rule 142 (especificadorTipo)


State 182

  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp
  188 declaracionParametro: especificadorDeclaracion • opcionesDecla
  189 opcionesDecla: ε •  [',', ')']
  190              | • decla

    '*'  shift, and go to state 39

    ','       reduce using rule 189 (opcionesDecla)
    ')'       reduce using rule 189 (opcionesDecla)
    $default  reduce using rule 168 (punteroOp)

    decla          go to state 224
    punteroOp      go to state 43
    puntero        go to state 44
    opcionesDecla  go to state 225


State 183

  178 continuacionDeclaradorDirecto: '(' opcional •

    $default  reduce using rule 178 (continuacionDeclaradorDirecto)


State 184

  180 opcional: listaTiposParametros • ')'

    ')'  shift, and go to state 226


State 185

  183 listaTiposParametros: listaParametros • opcionalListaParametros
  184 opcionalListaParametros: • ',' ELIPSIS
  185                        | ε •  [')']
  187 listaParametros: listaParametros • ',' declaracionParametro

    ','  shift, and go to state 227

    $default  reduce using rule 185 (opcionalListaParametros)

    opcionalListaParametros  go to state 228


State 186

  186 listaParametros: declaracionParametro •

    $default  reduce using rule 186 (listaParametros)


State 187

  181 opcional: listaIdentificadores • ')'
  192 listaIdentificadores: listaIdentificadores • ',' IDENTIFICADOR

    ','  shift, and go to state 229
    ')'  shift, and go to state 230


State 188

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  164 expConstanteOp: ':' • expresion

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 231
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 189

  177 continuacionDeclaradorDirecto: '[' expConstanteOp • ']'

    ']'  shift, and go to state 232


State 190

  150 cuerpoStructOp: '{' listaDeclaracionesStruct '}' •

    $default  reduce using rule 150 (cuerpoStructOp)


State 191

  162 declaStruct: ':' expresion •

    $default  reduce using rule 162 (declaStruct)


State 192

  160 declaradoresStruct: declaradoresStruct ',' • declaStruct
  161 declaStruct: • declaSi
  162            | • ':' expresion
  163 declaSi: • decla expConstanteOp
  166 decla: • punteroOp declaradorDirecto
  167 punteroOp: • puntero
  168          | ε •  [IDENTIFICADOR, '(']
  169 puntero: • '*' listaCalificadoresTipoOp punteroOp

    ':'  shift, and go to state 131
    '*'  shift, and go to state 39

    $default  reduce using rule 168 (punteroOp)

    declaStruct  go to state 233
    declaSi      go to state 134
    decla        go to state 135
    punteroOp    go to state 43
    puntero      go to state 44


State 193

  154 declaracionStruct: listaCalificadores declaradoresStruct ';' •

    $default  reduce using rule 154 (declaracionStruct)


State 194

  163 declaSi: decla expConstanteOp •

    $default  reduce using rule 163 (declaSi)


State 195

   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   41          | expAsignacion ',' • expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 234
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 196

   93 opcionPostfijo: PTR_OP IDENTIFICADOR •

    $default  reduce using rule 93 (opcionPostfijo)


State 197

   89 expPostfijo: IDENTIFICADOR '(' ')' •

    $default  reduce using rule 89 (expPostfijo)


State 198

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   92 opcionPostfijo: '(' $@3 • listaArgumentosNoVacia ')'
   94 listaArgumentosNoVacia: • expAsignacion masListaArgumentos
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAsignacion           go to state 235
    expCondicional          go to state 104
    expOr                   go to state 105
    expAnd                  go to state 106
    expIgualdad             go to state 107
    expRelacional           go to state 108
    expAditiva              go to state 109
    expMultiplicativa       go to state 110
    expUnaria               go to state 111
    opcionIncDec            go to state 112
    operUnario              go to state 113
    expPostfijo             go to state 114
    listaArgumentosNoVacia  go to state 236
    expPrimaria             go to state 115


State 199

   90 opcionPostfijo: '[' expresion • ']'

    ']'  shift, and go to state 237


State 200

  112 nombreTipo: tipoDato •

    $default  reduce using rule 112 (nombreTipo)


State 201

   79 expUnaria: SIZEOF '(' nombreTipo • ')'

    ')'  shift, and go to state 238


State 202

  102 expPrimaria: '(' expresion ')' •

    $default  reduce using rule 102 (expPrimaria)


State 203

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'
  136 opcionComa: ',' •  ['}']
  139 listaInicializadores: listaInicializadores ',' • inicializador
  140 inicializador: • expAsignacion
  141              | • '{' listaInicializadores opcionComa '}'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '{'             shift, and go to state 98
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    $default  reduce using rule 136 (opcionComa)

    expAsignacion      go to state 103
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115
    inicializador      go to state 239


State 204

  141 inicializador: '{' listaInicializadores opcionComa • '}'

    '}'  shift, and go to state 240


State 205

   54 expOr: expOr OR expAnd •  [error, OR, ',', ';', ')', '}', ':', '?', ']']
   56 expAnd: expAnd • AND expIgualdad

    AND  shift, and go to state 150

    $default  reduce using rule 54 (expOr)


State 206

   71 expMultiplicativa: expUnaria •

    $default  reduce using rule 71 (expMultiplicativa)


State 207

   52 expCondicional: expOr '?' expresion • ':' expCondicional

    ':'  shift, and go to state 241


State 208

   56 expAnd: expAnd AND expIgualdad •  [error, AND, OR, ',', ';', ')', '}', ':', '?', ']']
   58 expIgualdad: expIgualdad • opcionIgualdad
   59 opcionIgualdad: • EQ expRelacional
   60               | • NEQ expRelacional

    EQ   shift, and go to state 151
    NEQ  shift, and go to state 152

    $default  reduce using rule 56 (expAnd)

    opcionIgualdad  go to state 153


State 209

   59 opcionIgualdad: EQ expRelacional •  [error, EQ, NEQ, AND, OR, ',', ';', ')', '}', ':', '?', ']']
   62 expRelacional: expRelacional • opcionRelacional
   63 opcionRelacional: • '<' expAditiva
   64                 | • '>' expAditiva
   65                 | • LE expAditiva
   66                 | • GE expAditiva

    LE   shift, and go to state 154
    GE   shift, and go to state 155
    '<'  shift, and go to state 156
    '>'  shift, and go to state 157

    $default  reduce using rule 59 (opcionIgualdad)

    opcionRelacional  go to state 158


State 210

   60 opcionIgualdad: NEQ expRelacional •  [error, EQ, NEQ, AND, OR, ',', ';', ')', '}', ':', '?', ']']
   62 expRelacional: expRelacional • opcionRelacional
   63 opcionRelacional: • '<' expAditiva
   64                 | • '>' expAditiva
   65                 | • LE expAditiva
   66                 | • GE expAditiva

    LE   shift, and go to state 154
    GE   shift, and go to state 155
    '<'  shift, and go to state 156
    '>'  shift, and go to state 157

    $default  reduce using rule 60 (opcionIgualdad)

    opcionRelacional  go to state 158


State 211

   65 opcionRelacional: LE expAditiva •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', ']']
   68 expAditiva: expAditiva • opcionAditiva
   69 opcionAditiva: • '+' expMultiplicativa
   70              | • '-' expMultiplicativa

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 65 (opcionRelacional)

    opcionAditiva  go to state 161


State 212

   66 opcionRelacional: GE expAditiva •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', ']']
   68 expAditiva: expAditiva • opcionAditiva
   69 opcionAditiva: • '+' expMultiplicativa
   70              | • '-' expMultiplicativa

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 66 (opcionRelacional)

    opcionAditiva  go to state 161


State 213

   63 opcionRelacional: '<' expAditiva •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', ']']
   68 expAditiva: expAditiva • opcionAditiva
   69 opcionAditiva: • '+' expMultiplicativa
   70              | • '-' expMultiplicativa

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 63 (opcionRelacional)

    opcionAditiva  go to state 161


State 214

   64 opcionRelacional: '>' expAditiva •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', ']']
   68 expAditiva: expAditiva • opcionAditiva
   69 opcionAditiva: • '+' expMultiplicativa
   70              | • '-' expMultiplicativa

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 64 (opcionRelacional)

    opcionAditiva  go to state 161


State 215

   69 opcionAditiva: '+' expMultiplicativa •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', '+', '-', ']']
   72 expMultiplicativa: expMultiplicativa • '*' expUnaria
   73                  | expMultiplicativa • '/' expUnaria
   74                  | expMultiplicativa • '%' expUnaria

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 69 (opcionAditiva)


State 216

   70 opcionAditiva: '-' expMultiplicativa •  [error, EQ, NEQ, LE, GE, AND, OR, ',', ';', ')', '}', ':', '?', '<', '>', '+', '-', ']']
   72 expMultiplicativa: expMultiplicativa • '*' expUnaria
   73                  | expMultiplicativa • '/' expUnaria
   74                  | expMultiplicativa • '%' expUnaria

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 70 (opcionAditiva)


State 217

   72 expMultiplicativa: expMultiplicativa '*' expUnaria •

    $default  reduce using rule 72 (expMultiplicativa)


State 218

   73 expMultiplicativa: expMultiplicativa '/' expUnaria •

    $default  reduce using rule 73 (expMultiplicativa)


State 219

   74 expMultiplicativa: expMultiplicativa '%' expUnaria •

    $default  reduce using rule 74 (expMultiplicativa)


State 220

   44 expAsignacion: expUnaria operAsignacion error •

    $default  reduce using rule 44 (expAsignacion)


State 221

   43 expAsignacion: expUnaria operAsignacion expAsignacion •

    $default  reduce using rule 43 (expAsignacion)


State 222

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   11              | '{' $@1 listaDeclaraciones • listaSentenciasOp '}'
   16 listaSentencias: • sentencia listaSentenciasOp
   17                | • error
   18 listaSentenciasOp: • listaSentencias
   19                  | • VACIO
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    error           shift, and go to state 242
    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    VACIO           shift, and go to state 255
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 257
    sentCompuesta      go to state 258
    listaSentencias    go to state 259
    listaSentenciasOp  go to state 260
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 223

  182 opcional: tipoDato ')' •

    $default  reduce using rule 182 (opcional)


State 224

  190 opcionesDecla: decla •

    $default  reduce using rule 190 (opcionesDecla)


State 225

  188 declaracionParametro: especificadorDeclaracion opcionesDecla •

    $default  reduce using rule 188 (declaracionParametro)


State 226

  180 opcional: listaTiposParametros ')' •

    $default  reduce using rule 180 (opcional)


State 227

  103 tipoDato: • INT_TYPE
  104         | • FLOAT
  105         | • DOUBLE
  106         | • CHAR
  107         | • VOID
  108         | • SHORT
  109         | • LONG
  110         | • UNSIGNED
  111         | • SIGNED
  118 especificadorDeclaracion: • especificadorCompleto
  121 especificadorCompleto: • tipoAlmacenamiento especificadorDeclaracionOp
  122                      | • especificadorTipo especificadorDeclaracionOp
  123                      | • calificadorTipo especificadorDeclaracionOp
  124 tipoAlmacenamiento: • CONST
  125                   | • VOLATILE
  126 calificadorTipo: • TYPEDEF
  127                | • STATIC
  128                | • EXTERN
  129                | • AUTO
  130                | • REGISTER
  142 especificadorTipo: • tipoDato
  143                  | • especificadorStructUnion
  144                  | • especificadorEnum
  145 especificadorStructUnion: • structUnion cuerpoEspecificador
  146 structUnion: • STRUCT
  147            | • UNION
  184 opcionalListaParametros: ',' • ELIPSIS
  187 listaParametros: listaParametros ',' • declaracionParametro
  188 declaracionParametro: • especificadorDeclaracion opcionesDecla
  193 especificadorEnum: • ENUM opcionalEspecificadorEnum

    ENUM      shift, and go to state 1
    STRUCT    shift, and go to state 2
    UNION     shift, and go to state 3
    ELIPSIS   shift, and go to state 267
    INT_TYPE  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    CHAR      shift, and go to state 7
    VOID      shift, and go to state 8
    SHORT     shift, and go to state 9
    LONG      shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    SIGNED    shift, and go to state 12
    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    STATIC    shift, and go to state 16
    EXTERN    shift, and go to state 17
    AUTO      shift, and go to state 18
    REGISTER  shift, and go to state 19

    tipoDato                  go to state 22
    especificadorDeclaracion  go to state 182
    especificadorCompleto     go to state 27
    tipoAlmacenamiento        go to state 28
    calificadorTipo           go to state 29
    especificadorTipo         go to state 30
    especificadorStructUnion  go to state 31
    structUnion               go to state 32
    declaracionParametro      go to state 268
    especificadorEnum         go to state 33


State 228

  183 listaTiposParametros: listaParametros opcionalListaParametros •

    $default  reduce using rule 183 (listaTiposParametros)


State 229

  192 listaIdentificadores: listaIdentificadores ',' • IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 269


State 230

  181 opcional: listaIdentificadores ')' •

    $default  reduce using rule 181 (opcional)


State 231

  164 expConstanteOp: ':' expresion •

    $default  reduce using rule 164 (expConstanteOp)


State 232

  177 continuacionDeclaradorDirecto: '[' expConstanteOp ']' •

    $default  reduce using rule 177 (continuacionDeclaradorDirecto)


State 233

  160 declaradoresStruct: declaradoresStruct ',' declaStruct •

    $default  reduce using rule 160 (declaradoresStruct)


State 234

   41 expresion: expAsignacion ',' expresion •

    $default  reduce using rule 41 (expresion)


State 235

   94 listaArgumentosNoVacia: expAsignacion • masListaArgumentos
   95 masListaArgumentos: • masListaArgumentos ',' expAsignacion
   96                   | ε •

    $default  reduce using rule 96 (masListaArgumentos)

    masListaArgumentos  go to state 270


State 236

   92 opcionPostfijo: '(' $@3 listaArgumentosNoVacia • ')'

    ')'  shift, and go to state 271


State 237

   90 opcionPostfijo: '[' expresion ']' •

    $default  reduce using rule 90 (opcionPostfijo)


State 238

   79 expUnaria: SIZEOF '(' nombreTipo ')' •

    $default  reduce using rule 79 (expUnaria)


State 239

  139 listaInicializadores: listaInicializadores ',' inicializador •

    $default  reduce using rule 139 (listaInicializadores)


State 240

  141 inicializador: '{' listaInicializadores opcionComa '}' •

    $default  reduce using rule 141 (inicializador)


State 241

   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   52               | expOr '?' expresion ':' • expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expCondicional     go to state 272
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 206
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 242

   17 listaSentencias: error •

    $default  reduce using rule 17 (listaSentencias)


State 243

   33 sentEtiquetadas: IDENTIFICADOR • ':' sentencia
   88 expPostfijo: IDENTIFICADOR • opcionPostfijo
   89            | IDENTIFICADOR • '(' ')'
   90 opcionPostfijo: • '[' expresion ']'
   92               | • '(' $@3 listaArgumentosNoVacia ')'
   93               | • PTR_OP IDENTIFICADOR
   97 expPrimaria: IDENTIFICADOR •  [error, IDENTIFICADOR, LITERAL_CADENA, CONSTANTE, ENTERO, NUM, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, EQ, NEQ, LE, GE, AND, OR, INC_OP, DEC_OP, ',', '=', ';', '?', '<', '>', '+', '-', '*', '/', '%']

    PTR_OP  shift, and go to state 140
    '('     shift, and go to state 141
    ':'     shift, and go to state 273
    '['     shift, and go to state 142

    $default  reduce using rule 97 (expPrimaria)

    opcionPostfijo  go to state 143


State 244

   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   36 sentSalto: RETURN • sentExpresion
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentExpresion      go to state 274
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 245

   24 sentSeleccion: IF • '(' expresion ')' sentencia
   25              | IF • '(' expresion ')' sentencia ELSE sentencia

    '('  shift, and go to state 275


State 246

   28 sentIteracion: WHILE • '(' expresion ')' sentencia

    '('  shift, and go to state 276


State 247

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   29              | DO • sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 277
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 248

   30 sentIteracion: FOR • '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia

    '('  shift, and go to state 278


State 249

   35 sentEtiquetadas: DEFAULT • ':' listaSentencias

    ':'  shift, and go to state 279


State 250

   34 sentEtiquetadas: CASE • expresion ':' listaSentencias
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 280
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 251

   37 sentSalto: CONTINUE • ';'

    ';'  shift, and go to state 281


State 252

   38 sentSalto: BREAK • ';'

    ';'  shift, and go to state 282


State 253

   39 sentSalto: GOTO • IDENTIFICADOR ';'

    IDENTIFICADOR  shift, and go to state 283


State 254

   27 sentSeleccion: SWITCH • '(' expresion ')' $@2 sentencia

    '('  shift, and go to state 284


State 255

   19 listaSentenciasOp: VACIO •

    $default  reduce using rule 19 (listaSentenciasOp)


State 256

   20 sentExpresion: ';' •

    $default  reduce using rule 20 (sentExpresion)


State 257

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   16 listaSentencias: • sentencia listaSentenciasOp
   16                | sentencia • listaSentenciasOp
   17                | • error
   18 listaSentenciasOp: • listaSentencias
   19                  | • VACIO
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    error           shift, and go to state 242
    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    VACIO           shift, and go to state 255
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 257
    sentCompuesta      go to state 258
    listaSentencias    go to state 259
    listaSentenciasOp  go to state 285
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 258

    4 sentencia: sentCompuesta •

    $default  reduce using rule 4 (sentencia)


State 259

   18 listaSentenciasOp: listaSentencias •

    $default  reduce using rule 18 (listaSentenciasOp)


State 260

   11 sentCompuesta: '{' $@1 listaDeclaraciones listaSentenciasOp • '}'

    '}'  shift, and go to state 286


State 261

    5 sentencia: sentExpresion •

    $default  reduce using rule 5 (sentencia)


State 262

    6 sentencia: sentSeleccion •

    $default  reduce using rule 6 (sentencia)


State 263

    7 sentencia: sentIteracion •

    $default  reduce using rule 7 (sentencia)


State 264

    8 sentencia: sentEtiquetadas •

    $default  reduce using rule 8 (sentencia)


State 265

    9 sentencia: sentSalto •

    $default  reduce using rule 9 (sentencia)


State 266

   21 sentExpresion: expresion • opcionExpresion
   22 opcionExpresion: • ';'
   23                | • error

    error  shift, and go to state 287
    ';'    shift, and go to state 288

    opcionExpresion  go to state 289


State 267

  184 opcionalListaParametros: ',' ELIPSIS •

    $default  reduce using rule 184 (opcionalListaParametros)


State 268

  187 listaParametros: listaParametros ',' declaracionParametro •

    $default  reduce using rule 187 (listaParametros)


State 269

  192 listaIdentificadores: listaIdentificadores ',' IDENTIFICADOR •

    $default  reduce using rule 192 (listaIdentificadores)


State 270

   94 listaArgumentosNoVacia: expAsignacion masListaArgumentos •  [')']
   95 masListaArgumentos: masListaArgumentos • ',' expAsignacion

    ','  shift, and go to state 290

    $default  reduce using rule 94 (listaArgumentosNoVacia)


State 271

   92 opcionPostfijo: '(' $@3 listaArgumentosNoVacia ')' •

    $default  reduce using rule 92 (opcionPostfijo)


State 272

   52 expCondicional: expOr '?' expresion ':' expCondicional •

    $default  reduce using rule 52 (expCondicional)


State 273

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   33                | IDENTIFICADOR ':' • sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 291
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 274

   36 sentSalto: RETURN sentExpresion •

    $default  reduce using rule 36 (sentSalto)


State 275

   24 sentSeleccion: IF '(' • expresion ')' sentencia
   25              | IF '(' • expresion ')' sentencia ELSE sentencia
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 292
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 276

   28 sentIteracion: WHILE '(' • expresion ')' sentencia
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 293
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 277

   29 sentIteracion: DO sentencia • WHILE '(' expresion ')' ';'

    WHILE  shift, and go to state 294


State 278

   30 sentIteracion: FOR '(' • expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   31 expresionOp: • expresion
   32            | ε •  [';']
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    $default  reduce using rule 32 (expresionOp)

    expresionOp        go to state 295
    expresion          go to state 296
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 279

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   16 listaSentencias: • sentencia listaSentenciasOp
   17                | • error
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   35                | DEFAULT ':' • listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    error           shift, and go to state 242
    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 257
    sentCompuesta      go to state 258
    listaSentencias    go to state 297
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 280

   34 sentEtiquetadas: CASE expresion • ':' listaSentencias

    ':'  shift, and go to state 298


State 281

   37 sentSalto: CONTINUE ';' •

    $default  reduce using rule 37 (sentSalto)


State 282

   38 sentSalto: BREAK ';' •

    $default  reduce using rule 38 (sentSalto)


State 283

   39 sentSalto: GOTO IDENTIFICADOR • ';'

    ';'  shift, and go to state 299


State 284

   27 sentSeleccion: SWITCH '(' • expresion ')' $@2 sentencia
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 300
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 285

   16 listaSentencias: sentencia listaSentenciasOp •

    $default  reduce using rule 16 (listaSentencias)


State 286

   11 sentCompuesta: '{' $@1 listaDeclaraciones listaSentenciasOp '}' •

    $default  reduce using rule 11 (sentCompuesta)


State 287

   23 opcionExpresion: error •

    $default  reduce using rule 23 (opcionExpresion)


State 288

   22 opcionExpresion: ';' •

    $default  reduce using rule 22 (opcionExpresion)


State 289

   21 sentExpresion: expresion opcionExpresion •

    $default  reduce using rule 21 (sentExpresion)


State 290

   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   95 masListaArgumentos: masListaArgumentos ',' • expAsignacion
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expAsignacion      go to state 301
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 291

   33 sentEtiquetadas: IDENTIFICADOR ':' sentencia •

    $default  reduce using rule 33 (sentEtiquetadas)


State 292

   24 sentSeleccion: IF '(' expresion • ')' sentencia
   25              | IF '(' expresion • ')' sentencia ELSE sentencia

    ')'  shift, and go to state 302


State 293

   28 sentIteracion: WHILE '(' expresion • ')' sentencia

    ')'  shift, and go to state 303


State 294

   29 sentIteracion: DO sentencia WHILE • '(' expresion ')' ';'

    '('  shift, and go to state 304


State 295

   30 sentIteracion: FOR '(' expresionOp • ';' expresionOp ';' expresionOp ')' sentencia

    ';'  shift, and go to state 305


State 296

   31 expresionOp: expresion •

    $default  reduce using rule 31 (expresionOp)


State 297

   35 sentEtiquetadas: DEFAULT ':' listaSentencias •

    $default  reduce using rule 35 (sentEtiquetadas)


State 298

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   16 listaSentencias: • sentencia listaSentenciasOp
   17                | • error
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   34                | CASE expresion ':' • listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    error           shift, and go to state 242
    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 257
    sentCompuesta      go to state 258
    listaSentencias    go to state 306
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 299

   39 sentSalto: GOTO IDENTIFICADOR ';' •

    $default  reduce using rule 39 (sentSalto)


State 300

   27 sentSeleccion: SWITCH '(' expresion • ')' $@2 sentencia

    ')'  shift, and go to state 307


State 301

   95 masListaArgumentos: masListaArgumentos ',' expAsignacion •

    $default  reduce using rule 95 (masListaArgumentos)


State 302

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   24              | IF '(' expresion ')' • sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   25              | IF '(' expresion ')' • sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 308
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 303

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   28              | WHILE '(' expresion ')' • sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 309
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 304

   29 sentIteracion: DO sentencia WHILE '(' • expresion ')' ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    expresion          go to state 310
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 305

   30 sentIteracion: FOR '(' expresionOp ';' • expresionOp ';' expresionOp ')' sentencia
   31 expresionOp: • expresion
   32            | ε •  [';']
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    $default  reduce using rule 32 (expresionOp)

    expresionOp        go to state 311
    expresion          go to state 296
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 306

   34 sentEtiquetadas: CASE expresion ':' listaSentencias •

    $default  reduce using rule 34 (sentEtiquetadas)


State 307

   26 $@2: ε •
   27 sentSeleccion: SWITCH '(' expresion ')' • $@2 sentencia

    $default  reduce using rule 26 ($@2)

    $@2  go to state 312


State 308

   24 sentSeleccion: IF '(' expresion ')' sentencia •  [error, IDENTIFICADOR, LITERAL_CADENA, CONSTANTE, RETURN, IF, WHILE, DO, FOR, DEFAULT, CASE, CONTINUE, BREAK, GOTO, SWITCH, SIZEOF, ENTERO, NUM, INC_OP, DEC_OP, VACIO, ';', '(', '{', '-', '*', '&', '!']
   25              | IF '(' expresion ')' sentencia • ELSE sentencia

    ELSE  shift, and go to state 313

    $default  reduce using rule 24 (sentSeleccion)


State 309

   28 sentIteracion: WHILE '(' expresion ')' sentencia •

    $default  reduce using rule 28 (sentIteracion)


State 310

   29 sentIteracion: DO sentencia WHILE '(' expresion • ')' ';'

    ')'  shift, and go to state 314


State 311

   30 sentIteracion: FOR '(' expresionOp ';' expresionOp • ';' expresionOp ')' sentencia

    ';'  shift, and go to state 315


State 312

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   27              | SWITCH '(' expresion ')' $@2 • sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 316
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 313

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   25              | IF '(' expresion ')' sentencia ELSE • sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 317
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 314

   29 sentIteracion: DO sentencia WHILE '(' expresion ')' • ';'

    ';'  shift, and go to state 318


State 315

   30 sentIteracion: FOR '(' expresionOp ';' expresionOp ';' • expresionOp ')' sentencia
   31 expresionOp: • expresion
   32            | ε •  [')']
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 89
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    '('             shift, and go to state 97
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    $default  reduce using rule 32 (expresionOp)

    expresionOp        go to state 319
    expresion          go to state 296
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 316

   27 sentSeleccion: SWITCH '(' expresion ')' $@2 sentencia •

    $default  reduce using rule 27 (sentSeleccion)


State 317

   25 sentSeleccion: IF '(' expresion ')' sentencia ELSE sentencia •

    $default  reduce using rule 25 (sentSeleccion)


State 318

   29 sentIteracion: DO sentencia WHILE '(' expresion ')' ';' •

    $default  reduce using rule 29 (sentIteracion)


State 319

   30 sentIteracion: FOR '(' expresionOp ';' expresionOp ';' expresionOp • ')' sentencia

    ')'  shift, and go to state 320


State 320

    4 sentencia: • sentCompuesta
    5          | • sentExpresion
    6          | • sentSeleccion
    7          | • sentIteracion
    8          | • sentEtiquetadas
    9          | • sentSalto
   11 sentCompuesta: • '{' $@1 listaDeclaraciones listaSentenciasOp '}'
   20 sentExpresion: • ';'
   21              | • expresion opcionExpresion
   24 sentSeleccion: • IF '(' expresion ')' sentencia
   25              | • IF '(' expresion ')' sentencia ELSE sentencia
   27              | • SWITCH '(' expresion ')' $@2 sentencia
   28 sentIteracion: • WHILE '(' expresion ')' sentencia
   29              | • DO sentencia WHILE '(' expresion ')' ';'
   30              | • FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia
   30              | FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' • sentencia
   33 sentEtiquetadas: • IDENTIFICADOR ':' sentencia
   34                | • CASE expresion ':' listaSentencias
   35                | • DEFAULT ':' listaSentencias
   36 sentSalto: • RETURN sentExpresion
   37          | • CONTINUE ';'
   38          | • BREAK ';'
   39          | • GOTO IDENTIFICADOR ';'
   40 expresion: • expAsignacion
   41          | • expAsignacion ',' expresion
   42 expAsignacion: • expCondicional
   43              | • expUnaria operAsignacion expAsignacion
   44              | • expUnaria operAsignacion error
   51 expCondicional: • expOr
   52               | • expOr '?' expresion ':' expCondicional
   53 expOr: • expAnd
   54      | • expOr OR expAnd
   55 expAnd: • expIgualdad
   56       | • expAnd AND expIgualdad
   57 expIgualdad: • expRelacional
   58            | • expIgualdad opcionIgualdad
   61 expRelacional: • expAditiva
   62              | • expRelacional opcionRelacional
   67 expAditiva: • expMultiplicativa
   68           | • expAditiva opcionAditiva
   71 expMultiplicativa: • expUnaria
   72                  | • expMultiplicativa '*' expUnaria
   73                  | • expMultiplicativa '/' expUnaria
   74                  | • expMultiplicativa '%' expUnaria
   75 expUnaria: • expPostfijo
   76          | • opcionIncDec expPostfijo
   77          | • expPostfijo opcionIncDec
   78          | • operUnario expUnaria
   79          | • SIZEOF '(' nombreTipo ')'
   80 opcionIncDec: • INC_OP
   81             | • DEC_OP
   82 operUnario: • '&'
   83           | • '*'
   84           | • '-'
   85           | • '!'
   86 expPostfijo: • expPrimaria
   87            | • expPostfijo expPrimaria
   88            | • IDENTIFICADOR opcionPostfijo
   89            | • IDENTIFICADOR '(' ')'
   97 expPrimaria: • IDENTIFICADOR
   98            | • ENTERO
   99            | • NUM
  100            | • CONSTANTE
  101            | • LITERAL_CADENA
  102            | • '(' expresion ')'

    IDENTIFICADOR   shift, and go to state 243
    LITERAL_CADENA  shift, and go to state 90
    CONSTANTE       shift, and go to state 91
    RETURN          shift, and go to state 244
    IF              shift, and go to state 245
    WHILE           shift, and go to state 246
    DO              shift, and go to state 247
    FOR             shift, and go to state 248
    DEFAULT         shift, and go to state 249
    CASE            shift, and go to state 250
    CONTINUE        shift, and go to state 251
    BREAK           shift, and go to state 252
    GOTO            shift, and go to state 253
    SWITCH          shift, and go to state 254
    SIZEOF          shift, and go to state 92
    ENTERO          shift, and go to state 93
    NUM             shift, and go to state 94
    INC_OP          shift, and go to state 95
    DEC_OP          shift, and go to state 96
    ';'             shift, and go to state 256
    '('             shift, and go to state 97
    '{'             shift, and go to state 117
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '&'             shift, and go to state 101
    '!'             shift, and go to state 102

    sentencia          go to state 321
    sentCompuesta      go to state 258
    sentExpresion      go to state 261
    sentSeleccion      go to state 262
    sentIteracion      go to state 263
    sentEtiquetadas    go to state 264
    sentSalto          go to state 265
    expresion          go to state 266
    expAsignacion      go to state 138
    expCondicional     go to state 104
    expOr              go to state 105
    expAnd             go to state 106
    expIgualdad        go to state 107
    expRelacional      go to state 108
    expAditiva         go to state 109
    expMultiplicativa  go to state 110
    expUnaria          go to state 111
    opcionIncDec       go to state 112
    operUnario         go to state 113
    expPostfijo        go to state 114
    expPrimaria        go to state 115


State 321

   30 sentIteracion: FOR '(' expresionOp ';' expresionOp ';' expresionOp ')' sentencia •

    $default  reduce using rule 30 (sentIteracion)
